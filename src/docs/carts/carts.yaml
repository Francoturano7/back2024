# Definir los endpoints
paths:
  /api/carts:
    get:
      summary: Obtener todos los Carritos
      tags:
        - Get Carts
      responses:
        "200":
          description: Los carritos se obtuvieron correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Carts"
        "500":
          description: Problema en el servidor
    post:
      summary: Crear un Carrito
      tags:
        - Create Cart
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: "#components/requestBodies/createUpdateCart"
      responses:
        "200":
          description: El carrito se creó correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Carts"
        "500":
          description: Problema en el servidor 

  /api/carts/{cid}:
    get:
      summary: Obtener la información de un Carrito
      tags:
        - Get Cart
      parameters:
        - name: cid
          in: path
          required: true
          description: El ID de carrito a consultar
          schema:
            $type: string
      responses:
        "200":
          description: Se obtuvo correctamente el carrito
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Carts"
        "500":
          description: Problema en el servidor  
    delete:
      summary: Eliminar un Carrito
      tags:
        - Delete Cart
      parameters:
        - name: cid
          in: path
          required: true
          description: El ID del Carrito a eliminar
          schema:
            $type: string
      responses:
        "200":
          description: Se eliminó correctamente el Carrito
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Carts"
        "500":
          description: Problema en el servidor    

  /api/carts/{cid}/product/{pid}:
    post:
      summary: Agregar un producto al carrito
      tags:
        - Add Product In Cart
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
            description: ID del carrito
        - in: path
          name: pid
          required: true
          schema:
            type: string
            description: ID del producto
      responses:
        "200":
          description: El producto se agregó correctamente al carrito
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Carts"
        "500":
          description: Problema en el servidor
    put:
      summary: Actualizar un producto en el carrito
      tags:
        - Update Product In Cart
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
            description: ID del carrito
        - in: path
          name: pid
          required: true
          schema:
            type: string
            description: ID del producto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/schemas/Products" 
      responses:
        "200":
          description: El producto se actualizó correctamente en el carrito
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Carts"
        "500":
          description: Problema en el servidor
    delete:
      summary: Eliminar un producto del carrito
      tags:
        - Delete Product From Cart
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
            description: ID del carrito
        - in: path
          name: pid
          required: true
          schema:
            type: string
            description: ID del producto
      responses:
        "200":
          description: El producto se eliminó correctamente del carrito
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Carts"
        "500":
          description: Problema en el servidor

components:
  schemas:
    Carts:
      type: object
      properties:
        _id:
          type: string
          description: ID generado por MongoDB
        products:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
                description: ID del producto (generado por MongoDB)
              quantity:
                type: number
                description: Cantidad del producto en el carrito
      example:
        _id: "gs4gsv425"
        products:
          - productId: "605a6844a2a96f2468a66e81"
            quantity: 2

# Definir Body, que debe entregar el cliente en la petición
  requestBodies:
    createUpdateCart:
      type: object
      properties:
        products:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
                description: ID del producto (generado por MongoDB)
              quantity:
                type: number
                description: Cantidad del producto en el carrito
      example:
        products:
          - productId: "605a6844a2a96f2468a66e81"
            quantity: 2

